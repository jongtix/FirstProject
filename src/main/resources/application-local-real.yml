#Spring Boot에서는 application-xxxx.properties or application-xxxx.yml로 properties 파일을 만들면 profile=xxxx로 호출해서 설정을 가져올 수 있음
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 685838289144-libuum0clc82gpnnfcu4dq6mu0pkgllh.apps.googleusercontent.com
            client-secret: MITId9234lLNghbmoDpwqBQ4
            scope: profile,email #scope의 기본값은 openid,profile,email  #openid가 있으면 OpenId Provider인 서비스(구글)와 그렇지 않은 서비스(네이버, 카카오 등)로 나누어 각각 OAuth2Service를 만들어 줘야함
          naver:
            client-id: WKAl9XLzwORXSLtlxTnB
            client-secret: k7INJ8pxSD
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email,profile_image
            client-name: Naver

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response #네이버의 회원 조회 시 반환되는 JSON 형태 때문에 특별한 조취
                                          #JSON 결과 중 response 값을 user_name으로 사용하겠다는 뜻